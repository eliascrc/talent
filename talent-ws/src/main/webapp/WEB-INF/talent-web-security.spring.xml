<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-4.2.xsd"
       default-init-method="init">

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="technicalResourceAuthenticationProvider"/>
        <security:authentication-provider ref="tokenAuthenticationProvider"/>
    </security:authentication-manager>

    <security:http use-expressions="true" pattern="/**/*" auto-config="false" entry-point-ref="customAuthEntryPoint">
        <security:logout logout-url="/ws/logout" success-handler-ref="logoutHandler"/>
        <security:intercept-url pattern="/ws/login" access="isAnonymous()" method="POST"/>
        <security:intercept-url pattern="/ws/login/token" access="isAnonymous()" method="POST"/>
        <security:intercept-url pattern="/ws/user/loggedIn" access="permitAll()" method="GET"/>
        <security:intercept-url pattern="/ws/user/authenticated" access="hasAuthority('ROLE_USER')"/>
        <security:intercept-url pattern="/ws/**/*" access="permitAll()" method="HEAD"/>
        <security:intercept-url pattern="/ws/**/*" access="permitAll()" method="OPTIONS"/>
        <security:intercept-url pattern="/ws/resource" access="isAnonymous()" method="POST"/>
        <security:intercept-url pattern="/ws/admin/**/*" access="hasAuthority('ROLE_SYSTEM_ADMINISTRATOR')"/>
        <security:intercept-url pattern="/ws/content/**/*" access="permitAll()" method="GET"/>
        <security:intercept-url pattern="/ws/passwordReset/new/*" access="isAnonymous()" method="GET"/>
        <security:intercept-url pattern="/ws/passwordReset/**/*" access="isAnonymous()" method="POST"/>
        <security:intercept-url pattern="/ws/automation/**/*" access="isAnonymous()" method="POST"/>
        <security:intercept-url pattern="/ws/resource" access="isAnonymous()" method="POST"/>
        <security:intercept-url pattern="/ws/login/token" access="isAnonymous()"/>
        <security:intercept-url pattern="/ws/login" access="isAnonymous()" method="POST"/>
        <security:intercept-url pattern="/ws/login/organization" access="permitAll()" method="GET"/>
        <security:intercept-url pattern="/ws/user/authenticated" access="hasAuthority('ROLE_USER')"/>
        <security:intercept-url pattern="/ws/user/loggedIn" access="permitAll()"/>
        <security:intercept-url pattern="/ws/contactUs/authenticated" access="hasAuthority('ROLE_USER')" method="POST"/>
        <security:intercept-url pattern="/ws/contactUs/unauthenticated" access="permitAll()" method="POST"/>
        <security:intercept-url pattern="/ws/signUp/**/*" access="permitAll()" method="POST"/>
        <security:intercept-url pattern="/ws/organization/create" access="permitAll()" method="POST"/>
        <security:intercept-url pattern="/ws/organization/project/getHistory" access="hasAuthority('ROLE_USER')" method="GET"/>
        <security:intercept-url pattern="/ws/organization/skill/delete" access="hasAuthority('ROLE_USER')" method="POST"/>
        <security:intercept-url pattern="/ws/organization/skillCategory/delete" access="hasAuthority('ROLE_USER')" method="POST"/>
        <security:intercept-url pattern="/ws/technicalResource/skill/assign" access="hasAuthority('ROLE_USER')" method="POST"/>
        <security:intercept-url pattern="/ws/technicalResource/skill/get" access="hasAuthority('ROLE_USER')" method="GET"/>
        <security:intercept-url pattern="/ws/projectPosition/get" access="hasAuthority('ROLE_USER')" method="GET"/>
        <security:intercept-url pattern="/ws/technicalResource/**/*" access="hasAuthority('ROLE_USER')" method="POST"/>
        <security:intercept-url pattern="/ws/projectPosition/**/*" access="hasAuthority('ROLE_USER')" method="POST"/>
        <security:intercept-url pattern="/ws/acceptInvitation/validate/*" access="permitAll()" method="GET"/>
        <security:intercept-url pattern="/ws/acceptInvitation/**/*" access="permitAll()" method="POST"/>
        <security:intercept-url pattern="/ws/**/*" access="hasAuthority('ROLE_USER')"/>

        <security:custom-filter position="FORM_LOGIN_FILTER" ref="organizationFilter"/>
        <security:custom-filter before="BASIC_AUTH_FILTER" ref="tokenAuthenticationFilter"/>

        <security:access-denied-handler ref="accessDeniedHandler"/>
        <security:csrf disabled="true"/>
    </security:http>

    <bean id="customAuthEntryPoint" class="cr.talent.ws.rest.support.security.CustomAuthenticationEntryPoint">
        <property name="realmName" value="talent.cr"/>
    </bean>

    <bean id="accessDeniedHandler" class="cr.talent.ws.rest.support.security.UnauthorizedAccessHandler"/>

    <bean id="tokenAuthenticationFilter" class="cr.talent.core.security.token.TokenAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="filterProcessesUrl" value="/ws/login/token"/>
        <property name="authenticationSuccessHandler" ref="successLoginHandler"/>
        <property name="authenticationFailureHandler" ref="loginFailureHandler"/>
    </bean>

    <bean id="organizationFilter" class="cr.talent.core.security.organization.OrganizationFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="filterProcessesUrl" value="/ws/login"/>
        <property name="authenticationSuccessHandler" ref="successLoginHandler"/>
        <property name="authenticationFailureHandler" ref="loginFailureHandler"/>
        <property name="passwordParameter" value="password"/>
        <property name="usernameParameter" value="username"/>
    </bean>

</beans>
